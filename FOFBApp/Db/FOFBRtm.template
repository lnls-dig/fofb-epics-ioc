#
# FOFB database file
#
# Authors: Melissa Aguiar
#
# Created Dez. 03, 2021
#

############################
# RTM LAMP parameters
############################

record(longin,"$(P)$(R)PSStatus-Mon"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get RTM LAMP status register")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_STA")
}

record(mbbo,"$(P)$(R)DacDataSrc-Sel"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set enable data from WB for DACs")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CTL_DAC_DATA_FROM_WB")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"off")
    field(ONST,"on")
}
record(mbbi,"$(P)$(R)DacDataSrc-Sts"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get enable data from WB for DACs")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CTL_DAC_DATA_FROM_WB")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"off")
    field(ONST,"on")
}

record(mbbi,"$(S)$(RTM_CHAN)PSAmpOverCurrFlagL-Sts"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get amplifier left overcurrent flag")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_STA_AMP_IFLAG_L")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"over")
    field(ONST,"ok")
}

record(mbbi,"$(S)$(RTM_CHAN)PSAmpOverTempFlagL-Sts"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get amplifier left overtemperature flag")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_STA_AMP_TFLAG_L")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"over")
    field(ONST,"ok")
}

record(mbbi,"$(S)$(RTM_CHAN)PSAmpOverCurrFlagR-Sts"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get amplifier right overcurrent flag")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_STA_AMP_IFLAG_R")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"over")
    field(ONST,"ok")
}

record(mbbi,"$(S)$(RTM_CHAN)PSAmpOverTempFlagR-Sts"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get amplifier right overtemperature flag")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_STA_AMP_TFLAG_R")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"over")
    field(ONST,"ok")
}

record(mbbo,"$(S)$(RTM_CHAN)PwrState-Sel"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set amplifier enable")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_CTL_AMP_EN")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"off")
    field(ONST,"on")
}
record(mbbi,"$(S)$(RTM_CHAN)PwrState-Sts"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get amplifier enable")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_CTL_AMP_EN")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"off")
    field(ONST,"on")
}

record(mbbo,"$(S)$(RTM_CHAN)TestOpenLoopTriang-Sel"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set PI open-loop triangular wave enable")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_CTL_PI_OL_TRIANG_ENABLE")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"off")
    field(ONST,"on")
}
record(mbbi,"$(S)$(RTM_CHAN)TestOpenLoopTriang-Sts"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get PI open-loop triangular wave enable")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_CTL_PI_OL_TRIANG_ENABLE")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"off")
    field(ONST,"on")
}

record(mbbo,"$(S)$(RTM_CHAN)TestOpenLoopSquare-Sel"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set PI open-loop square wave enable")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_CTL_PI_OL_SQUARE_ENABLE")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"off")
    field(ONST,"on")
}
record(mbbi,"$(S)$(RTM_CHAN)TestOpenLoopSquare-Sts"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get PI open-loop square wave enable")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_CTL_PI_OL_SQUARE_ENABLE")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"off")
    field(ONST,"on")
    
}

record(mbbo,"$(S)$(RTM_CHAN)TestClosedLoopSquare-Sel"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set PI closed-loop square wave enable")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_CTL_PI_SP_SQUARE_ENABLE")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"off")
    field(ONST,"on")
}

record(mbbi,"$(S)$(RTM_CHAN)TestClosedLoopSquare-Sts"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get PI closed-loop square wave enable")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_CTL_PI_SP_SQUARE_ENABLE")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"off")
    field(ONST,"on")
}

record(mbbo,"$(S)$(RTM_CHAN)CtrlLoop-Sel"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set PI enable")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_CTL_PI_ENABLE")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"off")
    field(ONST,"on")
}
record(mbbi,"$(S)$(RTM_CHAN)CtrlLoop-Sts"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get PI enable")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_CTL_PI_ENABLE")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"off")
    field(ONST,"on")
}

record(longout,"$(S)$(RTM_CHAN)DacData-SP"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set data to be sent to DAC")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_DAC_DATA")
}
record(longin,"$(S)$(RTM_CHAN)DacData-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get data to be sent to DAC")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_DAC_DATA")
}

record(mbbo,"$(S)$(RTM_CHAN)DacWr-Cmd"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"write DAC data to external IC")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_DAC_WR")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"off")
    field(ONST,"on")
}

record(longout,"$(S)$(RTM_CHAN)CtrlLoopKp-SP"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set PI Kp parameter")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_PI_KP_DATA")
}
record(longin,"$(S)$(RTM_CHAN)CtrlLoopKp-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get PI Kp parameter")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_PI_KP_DATA")
}

record(longout,"$(S)$(RTM_CHAN)CtrlLoopTi-SP"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set PI Ti parameter")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_PI_TI_DATA")
}
record(longin,"$(S)$(RTM_CHAN)CtrlLoopTi-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get PI Ti parameter")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_PI_TI_DATA")
}

record(longout,"$(P)$(R)TestPIDacCntMax-SP"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set PI period of open-loop waveforms")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_PI_OL_DAC_CNT_MAX_DATA")
}
record(longin,"$(P)$(R)TestPIDacCntMax-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get period of open-loop waveforms")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_PI_OL_DAC_CNT_MAX_DATA")
}

record(longout,"$(P)$(R)TestCurrLowLim-SP"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set PI setpoint inferior limit")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_PI_SP_LIM_INF_DATA")
}
record(longin,"$(P)$(R)TestCurrLowLim-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get PI setpoint inferior limit")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_PI_SP_LIM_INF_DATA")
}

record(ao,"$(S)$(RTM_CHAN)Current-SP"){
  field(DESC,"set PI setpoint parameter")
  field(PINI,"YES")
  field(SCAN,"Passive")
  field(PREC,"8")
  field(FLNK,"$(S)$(RTM_CHAN)CurrentConv-SP CPP NMS")
}
record(calcout,"$(S)$(RTM_CHAN)CurrentConv-SP"){
    field(DESC,"set PI setpoint parameter in ADC counts")
    field(SCAN,"Passive")
    field(INPA, "$(S)$(RTM_CHAN)Current-SP")
    field(INPB, "$(S)$(RTM_CHAN)$(GAIN)-SP")
    field(INPC, "$(S)$(RTM_CHAN)$(OFFSET)-SP")
    field(CALC, "A/B+C")
    field(OOPT, "Every Time")
    field(OUT, "$(S)$(RTM_CHAN)CurrentRaw-SP CA NMS")
}
record(longout,"$(S)$(RTM_CHAN)CurrentRaw-SP"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set PI setpoint parameter")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_PI_SP_DATA")
}
record(longin,"$(S)$(RTM_CHAN)CurrentRaw-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get PI setpoint parameter in ADC counts")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))RTMLAMP_OHWR_CH_0_PI_SP_DATA")
    field(FLNK,"$(S)$(RTM_CHAN)CurrentConv2-SP CPP NMS")
}

record(calcout,"$(S)$(RTM_CHAN)CurrentConv2-SP"){
    field(DESC,"set PI setpoint parameter")
    field(SCAN,"Passive")
    field(PREC,"8")
    field(INPA, "$(S)$(RTM_CHAN)CurrentRaw-SP")
    field(INPB, "$(S)$(RTM_CHAN)$(GAIN)-SP")
    field(INPC, "$(S)$(RTM_CHAN)$(OFFSET)-SP")
    field(CALC, "B*(A-C)")
    field(OOPT, "On Change")
    field(OUT, "$(S)$(RTM_CHAN)Current-RB CA NMS")
}

record(ai,"$(S)$(RTM_CHAN)Current-RB"){
    field(DESC,"get PI setpoint parameter")
    field(SCAN,"Passive")
    field(PREC,"8")
}
